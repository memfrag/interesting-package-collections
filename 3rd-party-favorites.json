{"formatVersion":"1.0","generatedAt":"2023-09-23T15:24:04Z","generatedBy":{"name":"Various"},"keywords":[],"name":"3rd Party Favorites","overview":"This collection contains some of my favorite 3rd party packages.","packages":[{"keywords":["appkit","inspect","inspection","introspection","nsview","nsviewcontroller","swiftui","uikit","uiview","uiviewcontroller"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/siteline/swiftui-introspect/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/siteline/swiftui-introspect/main/README.md","summary":"Introspect underlying UIKit/AppKit components from SwiftUI","url":"https://github.com/siteline/SwiftUI-Introspect.git","versions":[{"defaultToolsVersion":"5.7","manifests":{"5.7":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"macos","version":"10.15"}],"packageName":"swiftui-introspect","products":[{"name":"SwiftUIIntrospect","targets":["SwiftUIIntrospect"],"type":{"library":["automatic"]}},{"name":"SwiftUIIntrospect-Dynamic","targets":["SwiftUIIntrospect"],"type":{"library":["dynamic"]}},{"name":"SwiftUIIntrospect-Static","targets":["SwiftUIIntrospect"],"type":{"library":["static"]}}],"targets":[{"moduleName":"SwiftUIIntrospect","name":"SwiftUIIntrospect"}],"toolsVersion":"5.7"}},"version":"1.0.0"},{"defaultToolsVersion":"5.7","manifests":{"5.7":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"macos","version":"10.15"}],"packageName":"swiftui-introspect","products":[{"name":"Introspect","targets":["Introspect"],"type":{"library":["automatic"]}},{"name":"Introspect-Dynamic","targets":["Introspect"],"type":{"library":["dynamic"]}},{"name":"Introspect-Static","targets":["Introspect"],"type":{"library":["static"]}},{"name":"SwiftUIIntrospect","targets":["SwiftUIIntrospect"],"type":{"library":["automatic"]}},{"name":"SwiftUIIntrospect-Dynamic","targets":["SwiftUIIntrospect"],"type":{"library":["dynamic"]}},{"name":"SwiftUIIntrospect-Static","targets":["SwiftUIIntrospect"],"type":{"library":["static"]}}],"targets":[{"moduleName":"Introspect","name":"Introspect"},{"moduleName":"SwiftUIIntrospect","name":"SwiftUIIntrospect"}],"toolsVersion":"5.7"}},"version":"0.12.0"},{"defaultToolsVersion":"5.7","manifests":{"5.7":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"macos","version":"10.15"}],"packageName":"swiftui-introspect","products":[{"name":"Introspect","targets":["Introspect"],"type":{"library":["automatic"]}},{"name":"Introspect-Dynamic","targets":["Introspect"],"type":{"library":["dynamic"]}},{"name":"Introspect-Static","targets":["Introspect"],"type":{"library":["static"]}},{"name":"SwiftUIIntrospect","targets":["SwiftUIIntrospect"],"type":{"library":["automatic"]}},{"name":"SwiftUIIntrospect-Dynamic","targets":["SwiftUIIntrospect"],"type":{"library":["dynamic"]}},{"name":"SwiftUIIntrospect-Static","targets":["SwiftUIIntrospect"],"type":{"library":["static"]}}],"targets":[{"moduleName":"Introspect","name":"Introspect"},{"moduleName":"SwiftUIIntrospect","name":"SwiftUIIntrospect"}],"toolsVersion":"5.7"}},"version":"0.11.1"},{"defaultToolsVersion":"5.7","manifests":{"5.7":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"macos","version":"10.15"}],"packageName":"swiftui-introspect","products":[{"name":"Introspect","targets":["Introspect"],"type":{"library":["automatic"]}},{"name":"Introspect-Dynamic","targets":["Introspect"],"type":{"library":["dynamic"]}},{"name":"Introspect-Static","targets":["Introspect"],"type":{"library":["static"]}},{"name":"SwiftUIIntrospect","targets":["SwiftUIIntrospect"],"type":{"library":["automatic"]}},{"name":"SwiftUIIntrospect-Dynamic","targets":["SwiftUIIntrospect"],"type":{"library":["dynamic"]}},{"name":"SwiftUIIntrospect-Static","targets":["SwiftUIIntrospect"],"type":{"library":["static"]}}],"targets":[{"moduleName":"Introspect","name":"Introspect"},{"moduleName":"SwiftUIIntrospect","name":"SwiftUIIntrospect"}],"toolsVersion":"5.7"}},"version":"0.11.0"}]},{"keywords":[],"license":{"name":"Apache-2.0","url":"https://raw.githubusercontent.com/apple/swift-http-types/main/LICENSE.txt"},"readmeURL":"https://raw.githubusercontent.com/apple/swift-http-types/main/README.md","summary":"Version-independent HTTP currency types for Swift","url":"https://github.com/apple/swift-http-types.git","versions":[{"defaultToolsVersion":"5.7.1","manifests":{"5.7.1":{"packageName":"swift-http-types","products":[{"name":"HTTPTypes","targets":["HTTPTypes"],"type":{"library":["automatic"]}},{"name":"HTTPTypesFoundation","targets":["HTTPTypesFoundation"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"HTTPTypes","name":"HTTPTypes"},{"moduleName":"HTTPTypesFoundation","name":"HTTPTypesFoundation"}],"toolsVersion":"5.7.1"}},"version":"1.0.0"},{"defaultToolsVersion":"5.7","manifests":{"5.7":{"packageName":"http-types","products":[{"name":"HTTPTypes","targets":["HTTPTypes"],"type":{"library":["automatic"]}},{"name":"HTTPTypesFoundation","targets":["HTTPTypesFoundation"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"HTTPTypes","name":"HTTPTypes"},{"moduleName":"HTTPTypesFoundation","name":"HTTPTypesFoundation"}],"toolsVersion":"5.7"}},"version":"0.2.1"},{"defaultToolsVersion":"5.7","manifests":{"5.7":{"packageName":"http-types","products":[{"name":"HTTPTypes","targets":["HTTPTypes"],"type":{"library":["automatic"]}},{"name":"HTTPTypesFoundation","targets":["HTTPTypesFoundation"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"HTTPTypes","name":"HTTPTypes"},{"moduleName":"HTTPTypesFoundation","name":"HTTPTypesFoundation"}],"toolsVersion":"5.7"}},"version":"0.2.0"},{"defaultToolsVersion":"5.7","manifests":{"5.7":{"packageName":"http-types","products":[{"name":"HTTPTypes","targets":["HTTPTypes"],"type":{"library":["automatic"]}},{"name":"HTTPTypesFoundation","targets":["HTTPTypesFoundation"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"HTTPTypes","name":"HTTPTypes"},{"moduleName":"HTTPTypesFoundation","name":"HTTPTypesFoundation"}],"toolsVersion":"5.7"}},"version":"0.1.1"}]}],"signature":{"certificate":{"issuer":{"commonName":"Apple Worldwide Developer Relations Certification Authority","organization":"Apple Inc.","organizationalUnit":"G3"},"subject":{"commonName":"Swift Package Collection: Apparata AB","organization":"Apparata AB","organizationalUnit":"DR5YAK7GKS","userID":"DR5YAK7GKS"}},"signature":"ewogICJhbGciIDogIlJTMjU2IiwKICAieDVjIiA6IFsKICAgICJNSUlGZHpDQ0JGK2dBd0lCQWdJUWFBS2ptNjgvd3BPdlRYWkFEVWRjTERBTkJna3Foa2lHOXcwQkFRc0ZBREIxTVVRd1FnWURWUVFERER0QmNIQnNaU0JYYjNKc1pIZHBaR1VnUkdWMlpXeHZjR1Z5SUZKbGJHRjBhVzl1Y3lCRFpYSjBhV1pwWTJGMGFXOXVJRUYxZEdodmNtbDBlVEVMTUFrR0ExVUVDd3dDUnpNeEV6QVJCZ05WQkFvTUNrRndjR3hsSUVsdVl5NHhDekFKQmdOVkJBWVRBbFZUTUI0WERUSXpNRGN6TURFek1qVXlOVm9YRFRJME1EY3lPVEV6TWpVeU5Gb3dnWVF4R2pBWUJnb0praWFKay9Jc1pBRUJEQXBFVWpWWlFVczNSMHRUTVM0d0xBWURWUVFERENWVGQybG1kQ0JRWVdOcllXZGxJRU52Ykd4bFkzUnBiMjQ2SUVGd2NHRnlZWFJoSUVGQ01STXdFUVlEVlFRTERBcEVValZaUVVzM1IwdFRNUlF3RWdZRFZRUUtEQXRCY0hCaGNtRjBZU0JCUWpFTE1Ba0dBMVVFQmhNQ1ZWTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDdSsxUFAyOElJOTVKcEN4bWVoaHlYNCsrQkZmbDhZWEppTGkveGxuWVdSQTl1Yk5CSmExaGdkL2xPZUhDTUdrRlVKYXN2cVhTK1p5UHViZytGSnA2TEJaem5vSWk1a1Zock5uY0djRU95amV1RTIyTi9ockhRTTVKZ0lnL3NKRkphcDFpU1RDUlgwek05TTA5c3pYWG1CWnFwSVQxb2NYMEZPYmppMlBHblZjMFFhQVFjOEVFc3MrRWZCNW1OQVZSZytaWmpQZEE0MWF1cG4ycG5ucDZSUlMyWDdDbTBUeXdNUVBDWTNJMkZ4dytzejdBd2VLaWtBR2E4NmZQTXBVaWFpdDVMS3NqTzA3alYxcklkMW5HT3l1ckE2U1JjTjFzakh4aFh5K2R3V1RPeTBVVGpPcGpUNXdjMjUveDNVQU8rTkRVRkNUSDczWWJCOE40SWc2R0hBZ01CQUFHamdnSHhNSUlCN1RBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRkFuK3dCV1ErYTlrQ3BJU3VTWW9Zd3lYN0tleU1FRUdDQ3NHQVFVRkJ3RUJCRFV3TXpBeEJnZ3JCZ0VGQlFjd0FZWWxhSFIwY0RvdkwyOWpjM0F1WVhCd2JHVXVZMjl0TDI5amMzQXdNeTEzZDJSeVp6TXhPVENDQVI0R0ExVWRJQVNDQVJVd2dnRVJNSUlCRFFZSktvWklodmRqWkFVQk1JSC9NSUhEQmdnckJnRUZCUWNDQWpDQnRneUJzMUpsYkdsaGJtTmxJRzl1SUhSb2FYTWdZMlZ5ZEdsbWFXTmhkR1VnWW5rZ1lXNTVJSEJoY25SNUlHRnpjM1Z0WlhNZ1lXTmpaWEIwWVc1alpTQnZaaUIwYUdVZ2RHaGxiaUJoY0hCc2FXTmhZbXhsSUhOMFlXNWtZWEprSUhSbGNtMXpJR0Z1WkNCamIyNWthWFJwYjI1eklHOW1JSFZ6WlN3Z1kyVnlkR2xtYVdOaGRHVWdjRzlzYVdONUlHRnVaQ0JqWlhKMGFXWnBZMkYwYVc5dUlIQnlZV04wYVdObElITjBZWFJsYldWdWRITXVNRGNHQ0NzR0FRVUZCd0lCRml0b2RIUndjem92TDNkM2R5NWhjSEJzWlM1amIyMHZZMlZ5ZEdsbWFXTmhkR1ZoZFhSb2IzSnBkSGt2TUJZR0ExVWRKUUVCL3dRTU1Bb0dDQ3NHQVFVRkJ3TURNQjBHQTFVZERnUVdCQlF1Z1VtQjk2UFJkYjR1UEc4eTZFeURxS3VmSXpBT0JnTlZIUThCQWY4RUJBTUNCNEF3RUFZS0tvWklodmRqWkFZQkl3UUNCUUF3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUsrK3VJNnZ0cUNpeCtTR09lWXFWRStZNzh5RXJMdnZuNDZaNyt2bG8wZ3JRdVJuWnVFUkQydnV1SW54N2FmMVlPUXF6elgvMFhnZFBsK3FqcDZOU09QcEh6RHE5UFBiSm4vR0xHdlpLc2lNOUp3N01jamtNa0FUcEdlMnZrdy9RZnZqVFdwY0lTaGdkMlVpZUgrVjBGT3RNdEVlcGJ5d2wwQ25KeHY3YVdxS0piaFNWMC85cWxUeWhYVURqN3dUNzQ4RmhWa0hpbDBmNWNQeGx3clZFV2FQMkdacy9NeGFLNkNGaHBLVUF5OWpkRjFVQWtYYndFR2N6aUI5aXBENFE2SXlFV3NCWGNSanQyYVl0MUs0cFF5U2ZhSUpWS3JqWGtkdlREYk9QcHRIQTduR25MZDNXd0xZdjBPWENSODVlMEM3eGN5ZlRza3RIaWJmWEpkREJqWT0iCiAgXQp9..O3bC2j0lWKFFRviXDMU7RtAlds2ejPzmtMw7F52l9S7FGuimuupjLMbPdJ6CoOhTEV7ZDlEA4JcnzZw3xbAAK11kqSMqxbM1jNnRnhbc7YN2aKPTp9aeNV9TQoNbJsJrKFNdRuGOgxr4VXc9dZYSM0AcApqdYByfmb1nP0Edn4fuPZuotBakgROQklWNJ9csBMM3ciacq3adgDW5V3Lf-XFHlIfmubuqWVJYtSzwdV1bVbkUhPVxPw5ZgTVYyNffYsSmsxRpAjSOOM-uENXKrqlgBt6oY8ZEJ12IcJRIPpcQ8ozHIFpsfJ9K47-OzqEnNxAs9tV1H9Pi8zGbqCK6jw"}}